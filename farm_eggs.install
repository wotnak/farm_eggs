<?php

/**
 * @file
 * Farm eggs update hooks.
 */

declare(strict_types=1);

use Drupal\farm_eggs\EggsServiceInterface;

/**
 * Implements hook_install().
 */
function farm_eggs_install(): void {
  farm_eggs_update_9002();
}

/**
 * Tag existing egg harvest logs with Eggs category.
 */
function farm_eggs_update_9001(): void {
  $eggsCategory = \Drupal::service('farm_eggs.eggs_service')->getEggsLogCategory();

  // Try to find egg harvest logs without 'Eggs' category based on log name pattern.
  $name = (string) \Drupal::service('farm_eggs.eggs_service')->getEggHarvestLogName(0);
  $nameParts = explode(' 0 ', $name);
  $query = \Drupal::entityTypeManager()->getStorage('log')->getQuery();
  $query->condition('type', 'harvest');
  $group = $query->orConditionGroup();
  $group->condition('category', $eggsCategory->id(), '<>');
  $group->condition('category', NULL, 'IS NULL');
  $query->condition($group);
  $query->condition('name', $nameParts[0], 'STARTS_WITH');
  $query->condition('name', $nameParts[1], 'ENDS_WITH');
  $logsIds = $query->execute();
  if (!is_array($logsIds) || empty($logsIds)) {
    return;
  }

  // Tag found egg harvest logs with eggs category.
  /** @var \Drupal\taxonomy\TermInterface[] */
  $logs = \Drupal::entityTypeManager()->getStorage('log')->loadMultiple($logsIds);
  foreach ($logs as $log) {
    $values = [];
    if (!$log->get('category')->isEmpty()) {
      /** @var array */
      $values = $log->get('category')->getValue();
    }
    $values[] = ['target_id' => $eggsCategory->id()];
    $log->set('category', $values);
    $log->save();
  }
}

/**
 * Add default egg types taxonomy terms.
 */
function farm_eggs_update_9002(): void {

  // Egg type taxonomy id.
  $taxonomyId = EggsServiceInterface::EGG_TYPE_TAXONOMY_ID;

  // Make sure taxonomy exists.
  $taxonomy = \Drupal::entityTypeManager()->getStorage('taxonomy_vocabulary')->load($taxonomyId);
  if ($taxonomy === NULL) {
    \Drupal::entityTypeManager()->getStorage('taxonomy_vocabulary')->create([
      'name' => t('Egg types'),
      'vid' => $taxonomyId,
      'description' => t('A list of egg types.'),
    ])->save();
  }

  // Egg types to be added.
  $eggTypes = [
    'Cracked',
    'Dirty',
  ];

  // Create taxonomy terms for all default egg types.
  foreach ($eggTypes as $type) {
    \Drupal::entityTypeManager()->getStorage('taxonomy_term')->create([
      'vid' => $taxonomyId,
      'name' => $type,
    ])->save();
  }
}
